{"ast":null,"code":"var _jsxFileName = \"/Users/fognozzle/Documents/homework/user-onboarding/src/Components/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet schema = yup.object().shape({\n  name: yup.string().required('a name is required'),\n  email: yup.string().required('a valid email address is required').email(),\n  password: yup.string().required('a password is required'),\n  tos: yup.boolean().oneOf([true], 'must accept terms of service')\n});\nexport default function Form(props) {\n  _s();\n\n  // const [disabled, setDisabled] = useState(true)\n  const [errors, setErrors] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    tos: false\n  });\n\n  const setFormErrors = (name, value) => {\n    yup.reach(schema, name).validate(value).then(() => setErrors({ ...errors,\n      [name]: ''\n    })).catch(err => setErrors({ ...errors,\n      [name]: err.errors[0]\n    }));\n  };\n\n  const initialFormValues = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    tos: false\n  };\n  const [form, setForm] = useState(initialFormValues);\n  const [disabled, setDisabled] = useState(true);\n\n  const onChange = event => {\n    const {\n      name,\n      type,\n      value,\n      checked\n    } = event.target;\n    const valueToUse = type === \"checkbox\" ? checked : value;\n    setFormErrors(name, valueToUse);\n    setForm({ ...form,\n      [name]: valueToUse\n    });\n    console.log(\"changing!\");\n  };\n\n  const submit = event => {\n    event.preventDefault();\n    const newUser = {\n      name: form.name.trim(),\n      email: form.email.trim(),\n      password: form.password.trim(),\n      tos: form.tos\n    };\n    axios.post(\"https://reqres.in/api/users\", newUser).then(res => {\n      setForm({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        tos: false\n      });\n    }).catch(err => {\n      debugger;\n    });\n  }; // useEffect(() => {\n  //     schema.isValid(form).then((valid) => setDisabled(!valid));\n  //   }, [form])\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form-container\",\n    onSubmit: submit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Name\",\n          type: \"text\",\n          name: \"name\",\n          onChange: onChange,\n          values: form.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Email\",\n          type: \"text\",\n          name: \"email\",\n          onChange: onChange,\n          values: form.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Password\",\n          type: \"text\",\n          name: \"password\",\n          onChange: onChange,\n          values: form.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Terms of Service:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"tos\",\n          type: \"checkbox\",\n          checked: form.tos,\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"gr6J+vfWg2YGbXd9KL1lGoaRH6s=\");\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/fognozzle/Documents/homework/user-onboarding/src/Components/Form.js"],"names":["React","useState","useEffect","axios","yup","schema","object","shape","name","string","required","email","password","tos","boolean","oneOf","Form","props","errors","setErrors","setFormErrors","value","reach","validate","then","catch","err","initialFormValues","form","setForm","disabled","setDisabled","onChange","event","type","checked","target","valueToUse","console","log","submit","preventDefault","newUser","trim","post","res"],"mappings":"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","sourcesContent":["import React, { useState, useEffect }  from 'react'\nimport axios from \"axios\";\nimport * as yup from \"yup\";\n\nlet schema = yup.object().shape({\n    name: yup.string().required('a name is required'),\n    email: yup.string().required('a valid email address is required').email(),\n    password: yup.string().required('a password is required'),\n    tos: yup.boolean().oneOf([true], 'must accept terms of service')\n  });\n\nexport default function Form(props) {\n\n    // const [disabled, setDisabled] = useState(true)\n    const [errors, setErrors] = useState({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        tos: false,\n    })\n    const setFormErrors = (name, value) => {\n        yup.reach(schema, name).validate(value)\n            .then(() => setErrors({...errors,[name]: ''}))\n            .catch(err => setErrors({ ...errors, [name]: err.errors[0]}))\n    }\n    const initialFormValues = {\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        tos: false,\n      }\n    const [form, setForm] = useState(initialFormValues)\n\n    const [disabled, setDisabled] = useState(true)\n\n    const onChange = (event) => {\n        const { name, type, value, checked } = event.target\n        const valueToUse = type === \"checkbox\" ? checked : value\n        setFormErrors(name, valueToUse)\n        setForm({ ...form, [name]: valueToUse })\n        console.log(\"changing!\")\n      } \n\n    const submit = (event) => {\n    event.preventDefault()\n    const newUser = {\n        name: form.name.trim(),\n        email: form.email.trim(),\n        password: form.password.trim(),\n        tos: form.tos\n    }\n    axios\n        .post(\"https://reqres.in/api/users\", newUser)\n        .then((res) => {\n        setForm({ name: \"\", email: \"\", password: \"\", tos: false })\n        })\n        .catch((err) => {\n        debugger;\n        })\n    }\n\n    // useEffect(() => {\n    //     schema.isValid(form).then((valid) => setDisabled(!valid));\n    //   }, [form])\n    \n\n    return (\n    <form className='form-container' onSubmit={submit}>\n        <div className='form-group'>\n          <label>\n            <input placeholder='Name' type='text' name='name' onChange={onChange} values={form.name} />\n          </label>\n          <div>\n\n          </div>\n        </div>\n        <div>\n          <label>\n            <input placeholder='Email' type='text' name='email' onChange={onChange} values={form.email} />\n          </label>\n        </div>\n        <div>\n          <label>\n            <input placeholder='Password' type='text' name='password' onChange={onChange} values={form.password} />\n          </label>\n        </div>\n        <div>\n          <label>\n            Terms of Service: \n            <input name=\"tos\" type=\"checkbox\" checked={form.tos} onChange={onChange} />\n          </label>\n        </div>\n        <div className='submit-container'>\n            <button >Submit</button>\n        </div>\n     </form>\n    )\n}"]},"metadata":{},"sourceType":"module"}