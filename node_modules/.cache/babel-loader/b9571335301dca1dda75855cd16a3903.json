{"ast":null,"code":"var _jsxFileName = \"/Users/fognozzle/Documents/homework/user-onboarding/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Form from \"./Components/Form\";\nimport User from \"./Components/User\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFormValues = {\n  name: \"\",\n  email: \"\",\n  password: \"\",\n  tos: false\n};\nexport default function App() {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [formValues, setFormValues] = useState(initialFormValues);\n\n  const updateForm = (inputName, inputValue) => {\n    setFormValues({ ...formValues,\n      [inputName]: inputValue\n    });\n  };\n\n  const submitForm = () => {\n    const {\n      name,\n      email,\n      password,\n      tos\n    } = formValues;\n    setUsers([...users, {\n      name: name.trim(),\n      email: email.trim(),\n      password: password.trim()\n    }]);\n    setFormValues(initialFormValues);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      form: formValues,\n      values: formValues,\n      update: updateForm,\n      submit: submitForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), users.map(user => {\n      return /*#__PURE__*/_jsxDEV(User, {\n        details: user\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"01ofeJM62VveyYE77C+NwS9FJ0o=\");\n\n_c = App;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/fognozzle/Documents/homework/user-onboarding/src/App.js"],"names":["React","useState","Form","User","initialFormValues","name","email","password","tos","App","users","setUsers","formValues","setFormValues","updateForm","inputName","inputValue","submitForm","trim","map","user","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AAEA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,IAAI,EAAE,EADkB;AAExBC,EAAAA,KAAK,EAAE,EAFiB;AAGxBC,EAAAA,QAAQ,EAAE,EAHc;AAIxBC,EAAAA,GAAG,EAAE;AAJmB,CAA1B;AAOA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAACG,iBAAD,CAA5C;;AAEA,QAAMU,UAAU,GAAG,CAACC,SAAD,EAAYC,UAAZ,KAA2B;AAC5CH,IAAAA,aAAa,CAAC,EACZ,GAAGD,UADS;AAEZ,OAACG,SAAD,GAAaC;AAFD,KAAD,CAAb;AAID,GALD;;AAOA,QAAMC,UAAU,GAAG,MAAM;AACvB,UAAM;AAAEZ,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,QAAf;AAAyBC,MAAAA;AAAzB,QAAgCI,UAAtC;AACAD,IAAAA,QAAQ,CAAC,CACP,GAAGD,KADI,EAEP;AACEL,MAAAA,IAAI,EAAEA,IAAI,CAACa,IAAL,EADR;AAEEZ,MAAAA,KAAK,EAAEA,KAAK,CAACY,IAAN,EAFT;AAGEX,MAAAA,QAAQ,EAAEA,QAAQ,CAACW,IAAT;AAHZ,KAFO,CAAD,CAAR;AAQAL,IAAAA,aAAa,CAACT,iBAAD,CAAb;AACD,GAXD;;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEQ,UAAZ;AAAwB,MAAA,MAAM,EAAEA,UAAhC;AAA4C,MAAA,MAAM,EAAEE,UAApD;AAAgE,MAAA,MAAM,EAAEG;AAAxE;AAAA;AAAA;AAAA;AAAA,YADF,EAGIP,KAAK,CAACS,GAAN,CAAWC,IAAD,IAAU;AAClB,0BACE,QAAC,IAAD;AAAoB,QAAA,OAAO,EAAEA;AAA7B,SAAWA,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,cADF;AAGD,KAJD,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GArCuBZ,G;;KAAAA,G;AAqCvB","sourcesContent":["import React, { useState } from \"react\";\nimport Form from \"./Components/Form\"\nimport User from \"./Components/User\";\n\nconst initialFormValues = {\n  name: \"\",\n  email: \"\",\n  password: \"\",\n  tos: false\n}\n\nexport default function App() {\n  const [users, setUsers] = useState([])\n\n  const [formValues, setFormValues] = useState(initialFormValues)\n\n  const updateForm = (inputName, inputValue) => {\n    setFormValues({\n      ...formValues,\n      [inputName]: inputValue\n    })\n  }\n\n  const submitForm = () => {\n    const { name, email, password, tos} = formValues\n    setUsers([\n      ...users,\n      {\n        name: name.trim(),\n        email: email.trim(),\n        password: password.trim(),\n      }\n    ])\n    setFormValues(initialFormValues)\n  }\n\n  return (\n    <div className=\"App\">\n      <Form form={formValues} values={formValues} update={updateForm} submit={submitForm} />\n      {\n        users.map((user) => {\n          return (\n            <User key={user.id} details={user} />\n          )\n        })\n      }\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}