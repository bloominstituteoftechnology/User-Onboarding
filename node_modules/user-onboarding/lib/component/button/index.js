"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var preact_1 = require("preact");
var theme_1 = require("../provider/theme");
/** 按钮组件 */
var Button = /** @class */ (function (_super) {
    __extends(Button, _super);
    function Button() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Button.prototype.render = function () {
        var _a = this.props, onClick = _a.onClick, children = _a.children, style = _a.style;
        return (preact_1.h(theme_1.ThemeContext.Consumer, null, function (theme) {
            var btnStyle = __assign({ display: 'inline-block', padding: '6px', lineHeight: '1', color: '#fff', background: theme && theme.brandColor, cursor: 'pointer' }, style);
            return (
            // 为避免 button 标签带来的默认样式，所以这里用 div 来画按钮
            preact_1.h("div", { onClick: onClick, style: btnStyle }, children));
        }));
    };
    return Button;
}(preact_1.Component));
exports.Button = Button;
//# sourceMappingURL=index.js.map