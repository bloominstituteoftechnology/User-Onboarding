"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var preact_1 = require("preact");
var debug_1 = require("../../debug");
var button_1 = require("../button");
var util_1 = require("../../util");
function withStepZIndex(Comp) {
    return function (props) {
        var wrapperStyle = {
            position: 'relative',
            zIndex: props.data.zIndex,
        };
        return (preact_1.h("div", { style: wrapperStyle },
            preact_1.h(Comp, __assign({}, props))));
    };
}
exports.withStepZIndex = withStepZIndex;
function withStepWaitUntil(Comp) {
    var NewComp = /** @class */ (function (_super) {
        __extends(class_1, _super);
        function class_1() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.state = {
                // 没有 waitUntil, 则直接开始
                isOk: !_this.props.data.waitUntil,
            };
            return _this;
        }
        class_1.prototype.componentDidMount = function () {
            var stop = this.startWait().stop;
            this.stopWait = stop;
        };
        class_1.prototype.componentWillUnmount = function () {
            this.stopWait && this.stopWait();
        };
        class_1.prototype.startWait = function () {
            var _this = this;
            var waitUntil = this.props.data.waitUntil;
            var done = function (err) {
                if (err)
                    return;
                _this.setState({ isOk: true });
            };
            var stopFunList = [];
            // 没有 waitUntil, 则直接开始
            if (!waitUntil) {
                this.setState({ isOk: true });
                return { stop: function () { } };
            }
            // selector
            if (waitUntil.selector) {
                var stop_1 = this.startWaitSelector(waitUntil.selector, function (err) {
                    debug_1.normalDebug.log('wait selector done: err=%s', err);
                    done(err);
                }).stop;
                stopFunList.push(stop_1);
                debug_1.normalDebug.log('start wait selector: %s', waitUntil.selector);
            }
            // delay
            if (waitUntil.delay) {
                var stop_2 = this.startWaitDelay(waitUntil.delay, function (err) {
                    debug_1.normalDebug.log('wait delay done: err=%s', err);
                    done(err);
                }).stop;
                stopFunList.push(stop_2);
                debug_1.normalDebug.log('start wait delay: %s ms', waitUntil.delay);
            }
            return {
                stop: function () {
                    stopFunList.forEach(function (stop) { return stop(); });
                },
            };
        };
        class_1.prototype.startWaitSelector = function (selector, done) {
            // 如果检测到了，可以直接返回
            if (document.querySelector(selector)) {
                done(null);
                return {
                    stop: function () { },
                };
            }
            var timer = setInterval(function () {
                var dom = document.querySelector(selector);
                if (dom) {
                    clearInterval(timer);
                    return done(null);
                }
            }, 300);
            return {
                stop: function () { return clearInterval(timer); },
            };
        };
        class_1.prototype.startWaitDelay = function (ms, done) {
            var timer = setTimeout(function () { return done(null); }, ms);
            return {
                stop: function () { return clearTimeout(timer); },
            };
        };
        class_1.prototype.render = function () {
            return this.state.isOk ? preact_1.h(Comp, __assign({}, this.props)) : null;
        };
        return class_1;
    }(preact_1.Component));
    return NewComp;
}
exports.withStepWaitUntil = withStepWaitUntil;
function withStepProgress(Comp) {
    var NewComp = /** @class */ (function (_super) {
        __extends(class_2, _super);
        function class_2() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.handleCancel = function () {
                _this.props.onCancel && _this.props.onCancel();
            };
            _this.handleNext = function () {
                _this.props.onNext && _this.props.onNext();
            };
            return _this;
        }
        class_2.prototype.componentDidMount = function () {
            var stop = this.startBind().stop;
            this.cancelBind = stop;
        };
        class_2.prototype.componentWillUnmount = function () {
            this.cancelBind && this.cancelBind();
        };
        class_2.prototype.startBind = function () {
            var _this = this;
            var nextStepTrigger = this.props.data.nextStepTrigger;
            var done = function (err) {
                if (err)
                    return;
                _this.setState({ isOk: true });
            };
            var stopFunList = [];
            if (nextStepTrigger) {
                var stop_3 = this.startBindNextStepTrigger(nextStepTrigger, function (err) {
                    debug_1.normalDebug.log('bind nextStepTrigger done: err=%s', err);
                    done(err);
                }).stop;
                stopFunList.push(stop_3);
                debug_1.normalDebug.log('start bind nextStepTrigger: %s', nextStepTrigger);
            }
            return {
                stop: function () {
                    stopFunList.forEach(function (stop) { return stop(); });
                },
            };
        };
        class_2.prototype.startBindNextStepTrigger = function (nextStepTrigger, done) {
            var _this = this;
            var handleNext = function (e) {
                var target = e.target;
                var dom = document.querySelector(nextStepTrigger);
                if (dom && util_1.isEqualOrChild(target, dom)) {
                    debug_1.normalDebug.log('nextStepTrigger clicked: selector=%s', nextStepTrigger);
                    _this.handleNext();
                }
            };
            document.body.addEventListener('click', handleNext);
            done(null);
            return {
                stop: function () { return document.body.removeEventListener('click', handleNext); },
            };
        };
        class_2.prototype.getProgressChild = function () {
            var nextStepTrigger = this.props.data.nextStepTrigger;
            var isLast = this.props.stepIndex + 1 === this.props.stepTotal;
            return [
                preact_1.h(button_1.Button, { key: '1', onClick: this.handleCancel, style: { background: '#ccc' } }, "\u9000\u51FA"),
                nextStepTrigger ? null : (preact_1.h(button_1.Button, { key: '2', onClick: this.handleNext, style: { marginLeft: '16px' } }, isLast ? '完成' : '下一步')),
            ];
        };
        class_2.prototype.render = function () {
            var progressChild = this.getProgressChild();
            return preact_1.h(Comp, __assign({}, this.props, { progressChild: progressChild }));
        };
        return class_2;
    }(preact_1.Component));
    return NewComp;
}
exports.withStepProgress = withStepProgress;
function withResizeUpdate(Comp) {
    var NewComp = /** @class */ (function (_super) {
        __extends(class_3, _super);
        function class_3() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.handleResize = util_1.debounce(function () {
                debug_1.normalDebug.log('update due to resize');
                _this.forceUpdate();
            }, 500);
            return _this;
        }
        class_3.prototype.componentDidMount = function () {
            this.removeListener = util_1.makeEventListener(this.handleResize, 'resize');
        };
        class_3.prototype.componentWillUnmount = function () {
            this.removeListener && this.removeListener();
        };
        class_3.prototype.render = function () {
            return preact_1.h(Comp, __assign({}, this.props));
        };
        return class_3;
    }(preact_1.Component));
    return NewComp;
}
exports.withResizeUpdate = withResizeUpdate;
function withAllStepHelper(Comp) {
    // withStepWaitUntil 会控制组件是否渲染，需要放在第一个位置
    return [withStepWaitUntil, withStepZIndex, withStepProgress, withResizeUpdate].reduceRight(function (C, handler) { return handler(C); }, Comp);
}
exports.withAllStepHelper = withAllStepHelper;
//# sourceMappingURL=hoc.js.map