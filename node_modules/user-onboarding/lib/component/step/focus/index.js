"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var preact_1 = require("preact");
var mask_1 = require("../../mask");
var makePosition = function (height, width) { return ({
    top: {
        anchor: {
            x: width / 2,
            y: 0,
        },
        offset: {
            x: '-50%',
            y: '-100%',
        },
    },
    left: {
        anchor: {
            x: 0,
            y: height / 2,
        },
        offset: {
            x: '-100%',
            y: '-50%',
        },
    },
    right: {
        anchor: {
            x: width,
            y: height / 2,
        },
        offset: {
            x: '0',
            y: '-50%',
        },
    },
    bottom: {
        anchor: {
            x: width / 2,
            y: height,
        },
        offset: {
            x: '-50%',
            y: '0',
        },
    },
    bottomLeft: {
        anchor: {
            x: 0,
            y: height,
        },
        offset: {
            x: '-80%',
            y: '0',
        },
    },
}); };
var DEFAULT_POSITION = 'left';
var StepFocus = /** @class */ (function (_super) {
    __extends(StepFocus, _super);
    function StepFocus() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /** 获取聚焦点的位置 */
    StepFocus.prototype.getFocusArea = function () {
        var selector = this.props.data.selector;
        var selectorList = typeof selector === 'string' ? [selector] : selector;
        var area = {
            top: null,
            right: null,
            bottom: null,
            left: null,
        };
        // selector 是数组，要循环计算所有 selector 占用的最大区域
        selectorList.forEach(function (s, index) {
            var targetDom = document.querySelector(s);
            if (!targetDom)
                return null;
            var currentArea = targetDom.getBoundingClientRect();
            if (index === 0) {
                area.top = currentArea.top;
                area.right = currentArea.right;
                area.bottom = currentArea.bottom;
                area.left = currentArea.left;
            }
            else {
                area.top = Math.min(area.top, currentArea.top);
                area.right = Math.max(area.right, currentArea.right);
                area.left = Math.min(area.left, currentArea.left);
                area.bottom = Math.max(area.bottom, currentArea.bottom);
            }
        });
        return area;
    };
    StepFocus.prototype.render = function () {
        var data = this.props.data;
        var _a = data.position, position = _a === void 0 ? DEFAULT_POSITION : _a;
        var focusArea = this.getFocusArea();
        /**
         * 这里的位置计算用了两层节点。外层是 anchor，内层是 offset。
         * anchor 绝对定位配合 offset 位置偏移来实现 8 个定位位置。
         */
        var posDef = makePosition(focusArea.bottom - focusArea.top, focusArea.right - focusArea.left)[position];
        var anchorStyle = {
            position: 'fixed',
            zIndex: '1000',
            top: focusArea.top + posDef.anchor.y,
            left: focusArea.left + posDef.anchor.x,
        };
        var offsetStyle = {
            transform: "translate(" + posDef.offset.x + ", " + posDef.offset.y + ")",
        };
        var contentStyle = __assign({ position: 'relative', padding: '16px', background: '#fff', width: data.width, borderRadius: '4px', pointerEvents: 'initial' }, (position === 'top' && { transform: "translateY(-16px)" }), (position === 'left' && { marginRight: '16px' }), (position === 'right' && { marginLeft: '16px' }), (position === 'bottom' && { marginTop: '16px' }), (position === 'bottomLeft' && { marginTop: '16px' }));
        /** 小箭头样式 */
        var arrowStyle = __assign({ content: '', position: 'absolute', height: '8px', width: '8px', background: '#fff', transform: 'rotate(45deg)' }, (position === 'top' && {
            bottom: '-4px',
            left: 'calc(50% - 4px)',
        }), (position === 'left' && {
            top: 'calc(50% - 4px)',
            right: '-4px',
        }), (position === 'right' && {
            top: 'calc(50% - 4px)',
            left: '-4px',
        }), (position === 'bottom' && {
            top: '-4px',
            left: 'calc(50% - 4px)',
        }), (position === 'bottomLeft' && {
            top: '-4px',
            left: 'calc(80% - 4px)',
        }));
        var footerStyle = {
            marginTop: '8px',
            textAlign: 'right',
        };
        return (preact_1.h("div", null,
            preact_1.h(mask_1.Mask, { area: focusArea }),
            preact_1.h("div", { "data-name": 'anchor', style: anchorStyle },
                preact_1.h("div", { "data-name": 'offset', style: offsetStyle },
                    preact_1.h("div", { "data-name": 'content', style: contentStyle },
                        preact_1.h("div", { style: arrowStyle }),
                        preact_1.h("div", { dangerouslySetInnerHTML: { __html: data.content } }),
                        this.props.progressChild && (preact_1.h("footer", { style: footerStyle }, this.props.progressChild)))))));
    };
    return StepFocus;
}(preact_1.Component));
exports.StepFocus = StepFocus;
//# sourceMappingURL=index.js.map